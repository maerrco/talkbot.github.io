{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/chatbot/chatbot.component.css","webpack:///./src/app/chatbot/chatbot.component.html","webpack:///./src/app/chatbot/chatbot.component.ts","webpack:///./src/app/dialogflow.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,mB;;;;;;;;;;;ACAA,8C;;;;;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,KAAK,CAAC;IAChB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACM;AACJ;AAEI;AACgB;AACN;AAgBzD;IAAA;IAAyB,CAAC;IAAb,SAAS;QAbrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,2EAAgB;aACjB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,0DAAW;gBACX,wDAAU;aACX;YACD,SAAS,EAAE,CAAC,qEAAiB,CAAC;YAC9B,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACvBtB,yBAAyB,oBAAoB,qBAAqB,gCAAgC,qBAAqB,qBAAqB,6BAA6B,KAAK,gBAAgB,qBAAqB,MAAM,mBAAmB,oBAAoB,oBAAoB,sBAAsB,KAAK,eAAe,oBAAoB,oBAAoB,KAAK,kBAAkB,oBAAoB,sBAAsB,qBAAqB,2BAA2B,oCAAoC,oCAAoC,2BAA2B,KAAK,mBAAmB,qBAAqB,sBAAsB,qBAAqB,uCAAuC,uCAAuC,2BAA2B,KAAK,eAAe,oBAAoB,oBAAoB,KAAK,UAAU,oBAAoB,oBAAoB,KAAK,YAAY,oCAAoC,oBAAoB,sBAAsB,2BAA2B,KAAK,WAAW,qBAAqB,KAAK,S;;;;;;;;;;;ACAlhC,mPAAmP,cAAc,wEAAwE,eAAe,gIAAgI,UAAU,kNAAkN,kBAAkB,kY;;;;;;;;;;;;;;;;;;;;;;;;;ACAppB;AACQ;AAO1D;IAEE,0BAAoB,IAAuB;QAAvB,SAAI,GAAJ,IAAI,CAAmB;QAO3C,oBAAe,GAAa,EAAE,CAAC;QAC/B,kBAAa,GAAa,EAAE,CAAC;IARkB,CAAC;IAAA,CAAC;IAUjD,mCAAQ,GAAR;QACE,IAAI,CAAC,WAAW,GAAG,UAAU;IAC/B,CAAC;IAED,sCAAW,GAAX,UAAY,KAAU;QAAtB,iBAYC;QAXC,KAAK,CAAC,WAAW,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;QAC7C,EAAE,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAC5C,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;YAEtB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,aAAG;gBACpD,KAAI,CAAC,MAAM,GAAG,GAAG,CAAC;gBAClB,KAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC;gBAC5C,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;YACzD,CAAC,CAAC;QACJ,CAAC;IACH,CAAC;IA5BU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCAG0B,qEAAiB;OAFhC,gBAAgB,CA8B5B;IAAD,uBAAC;CAAA;AA9B4B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRc;AACG;AAET;AAMrC;IAKE,2BAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAHtB,YAAO,GAAW,gDAAgD,CAAC;QACnE,UAAK,GAAW,kCAAkC,CAAC;IAEzB,CAAC;IAE5B,uCAAW,GAAlB,UAAmB,KAAa;QAC9B,IAAI,IAAI,GAAG;YACT,KAAK,EAAG,KAAK;YACb,IAAI,EAAE,IAAI;YACV,SAAS,EAAE,OAAO;SACnB;QACD,MAAM,CAAC,IAAI,CAAC,IAAI;aACb,IAAI,CAAC,KAAG,IAAI,CAAC,OAAS,EAAE,IAAI,EAAE,EAAC,OAAO,EAAE,IAAI,CAAC,UAAU,EAAE,EAAC,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,UAAC,QAAa,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC,CAAC,CAAC;IAC/G,CAAC;IAEM,sCAAU,GAAjB;QACE,IAAI,OAAO,GAAG,IAAI,qDAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,YAAU,IAAI,CAAC,KAAO,CAAC,CAAC;QACxD,MAAM,CAAC,OAAO,CAAC;IACjB,CAAC;IArBU,iBAAiB;QAH7B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAM0B,kDAAI;OALnB,iBAAiB,CAsB7B;IAAD,wBAAC;CAAA;AAtB6B;;;;;;;;;;;;;;ACT9B;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-chatbot></app-chatbot>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule }   from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ChatbotComponent } from './chatbot/chatbot.component';\r\nimport { DialogflowService } from './dialogflow.service';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ChatbotComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpModule\r\n  ],\r\n  providers: [DialogflowService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\r\n","module.exports = \".chat {\\r\\n    float: left;\\r\\n    margin: 20px;\\r\\n    border: 1px solid black;\\r\\n    width: 600px;\\r\\n    height: 100%;\\r\\n    padding-bottom: 40px;\\r\\n}\\r\\n.chat form {\\r\\n    padding:20px; \\r\\n}\\r\\n.conversation {\\r\\n    float: left;\\r\\n    width: 100%;\\r\\n    height: 300px;\\r\\n}\\r\\n.response {\\r\\n    float: left;\\r\\n    width: 100%;\\r\\n}\\r\\n.bot-message {\\r\\n    float: left;\\r\\n    padding: 20px;\\r\\n    width: 100px;\\r\\n    text-align: center;\\r\\n    background-color: lightblue;\\r\\n    border: 1px solid lightblue;\\r\\n    border-radius: 10%;\\r\\n}\\r\\n.user-message {\\r\\n    float: right;\\r\\n    padding: 20px;\\r\\n    width: 100px;\\r\\n    background-color: darkseagreen;\\r\\n    border: 1px solid darkseagreen;\\r\\n    border-radius: 10%;\\r\\n}\\r\\n.showText {\\r\\n    width: 100%;\\r\\n    float: left;\\r\\n}\\r\\n.msg {\\r\\n    width: 100%;\\r\\n    float: left;\\r\\n}\\r\\n.header{\\r\\n    background-color: cadetblue;\\r\\n    color:white;\\r\\n    padding: 20px;\\r\\n    text-align: center;\\r\\n}\\r\\ninput {\\r\\n    width: 280px;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"chat\\\">\\r\\n  <div class=\\\"header\\\">Chatbot</div>\\r\\n  <form #questions=\\\"ngForm\\\">\\r\\n    <div class=\\\"conversation\\\" #conversation style=\\\"overflow-y: scroll\\\">\\r\\n      <div class=\\\"bot-message\\\">\\r\\n        {{\\\"Hi there\\\"}}\\r\\n      </div>\\r\\n      <div *ngFor=\\\"let question of listOfQuestions; let k = index; let l = last\\\" class=\\\"section\\\">\\r\\n        <div class=\\\"msg\\\">\\r\\n          <div *ngIf=\\\"question\\\" class=\\\"user-message\\\">{{question}}</div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"bot-message\\\">\\r\\n          <div *ngIf='listOfResults[k]' class=\\\"showText\\\">\\r\\n            <div *ngIf='listOfResults[k]' class=\\\"msg\\\">\\r\\n              {{listOfResults[k]}}\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"response\\\">\\r\\n      <input autocomplete=\\\"off\\\" [(ngModel)]=\\\"newQuestion\\\" name=\\\"newQuestion\\\" placeholder=\\\"Question\\\" autofocus>\\r\\n      <button class=\\\"ask\\\" type=\\\"submit\\\" (click)=\\\"askQuestion(questions.value)\\\">Ask me</button>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { DialogflowService } from '../dialogflow.service';\r\n\r\n@Component({\r\n  selector: 'app-chatbot',\r\n  templateUrl: './chatbot.component.html',\r\n  styleUrls: ['./chatbot.component.css']\r\n})\r\nexport class ChatbotComponent implements OnInit {\r\n\r\n  constructor(private chat: DialogflowService) { };\r\n  welcomeText: string;\r\n\r\n  question: any;\r\n  res: any;\r\n  result: any;\r\n  newQuestion: string;\r\n  listOfQuestions: string[] = [];\r\n  listOfResults: string[] = [];\r\n\r\n  ngOnInit() {\r\n    this.welcomeText = \"Hi there\"\r\n  }\r\n\r\n  askQuestion(value: any) {\r\n    value.newQuestion = value.newQuestion.trim();\r\n    if (value.newQuestion) {\r\n      this.listOfQuestions.push(this.newQuestion);\r\n      this.newQuestion = '';\r\n\r\n      this.chat.getResponse(value.newQuestion).subscribe(res => {\r\n        this.result = res;\r\n        this.result = res.result.fulfillment.speech;\r\n        this.listOfResults.push(res.result.fulfillment.speech);\r\n      })\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Http, Headers } from '@angular/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from \"rxjs/operators\";\r\nimport { environment } from '../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DialogflowService {\r\n\r\n  private baseURL: string = \"https://api.dialogflow.com/v1/query?v=20150910\";\r\n  private token: string = \"a68f2e4a88ff4d8abba02ae8b88624bd\";\r\n\r\n  constructor(private http: Http) { }\r\n\r\n  public getResponse(query: string) {\r\n    let data = {\r\n      query : query,\r\n      lang: 'en',\r\n      sessionId: '12345'\r\n    }\r\n    return this.http\r\n      .post(`${this.baseURL}`, data, {headers: this.getHeaders()}).pipe(map((response: any) => response.json()));\r\n  }\r\n\r\n  public getHeaders() {\r\n    let headers = new Headers();\r\n    headers.append('Authorization', `Bearer ${this.token}`);\r\n    return headers;\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}